generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  token       String    @id @db.Char(250)
  user_id     String    @unique @db.Uuid
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  valid_until DateTime  @default(dbgenerated("(timezone('utc'::text, now()) + '1 day'::interval)")) @db.Timestamp(6)
  type        TokenType

  @@map("token")
}

model User {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username       String?       @unique
  email          String        @unique
  password       String
  first_name     String
  last_name      String
  middle_name    String?
  avatar         String?
  status         AccountStatus @default(pending)
  gender         Gender?
  email_verified Boolean       @default(false)
  birth_date     DateTime?     @db.Date
  created_at     DateTime      @default(dbgenerated("timezone('UTC'::text, now())")) @db.Timestamp(6)
  updated_at     DateTime      @default(dbgenerated("timezone('UTC'::text, now())")) @db.Timestamp(6)
  deleted_at     DateTime?
  Token          Token?

  @@map("user")
}

enum AccountStatus {
  pending
  confirmed
  compromised
}

enum Gender {
  male
  female
}

enum TokenType {
  email_verification
  phone
  reset_password
}
